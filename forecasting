# generate data for forecasting
forecast_data = scaled_data[-n_past:, :]

# reshape into 3 dimensions (number of data, n_past, 1)
forecast_data = np.reshape(forecast_data, (1, forecast_data.shape[0], 1))

# forecasting
forecast = []
for i in range(n_future):
    # next stock price prediction
    predicted_price = model.predict(forecast_data)

    # add to estimate list
    forecast.append(predicted_price[0, 0])

    # update data for forecasting
    forecast_data = np.delete(forecast_data, 0)
    forecast_data = np.append(forecast_data, predicted_price[0, 0])
    forecast_data = np.reshape(forecast_data, (1, n_past, 1))

# inverse scaling
forecast = scaler.inverse_transform([forecast]).flatten()

last_date = data.index[-1]
date_range = pd.date_range(last_date, periods=n_future + 1, freq='B').tolist()

# plot of forecasting results
fig = go.Figure()

# original data plots
fig.add_trace(go.Scatter(x=data.index, y=data['Close'], name='Actual'))

# prediction plots
fig.add_trace(go.Scatter(x=date_range, y=forecast, name='Forecast'))

# plot layouts
fig.update_layout(
    title='Forecasting Harga Saham ANTM',
    xaxis_title='Tanggal',
    yaxis_title='Harga (IDR)',
    template=pio.templates['plotly_dark']
)

# tampilkan plot
fig.show()
